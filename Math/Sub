**************   Subarray   **************
A subarray is a slice from the array which is contiguous (i.e. occupy consecutive positions) and inherently maintains the order of 
elements. For example, the subarrays of the array {1, 2, 3} are {1}, {1, 2}, {1, 2, 3}, {2}, {2, 3}, and {3}.
Please note that there are exactly n*(n+1)/2 subarrays in an array of size n. Also, there is no such thing as contiguous subarray. 
The prefix contiguous is sometimes applied to make context more clear. 


**************   Substring   **************
A substring of a string s is that occurs in s. A substring is almost similar to a subarray but it is in context of strings. 
For example , the substrings of 'apple' are 'a' , 'ap' , 'app' , 'appl' , 'apple' , 'p' , 'pp' , 'ppl' , 'pple' , 'p' , 'pl' ,
'ple' , 'l' , 'le' , 'e'.
Please note that there are exactly n*(n+1)/2 subtrings in an string of size n


**************   Subsequence   **************
A subsequence is a sequence that can be derived from another sequence by deleting some elements without changing the order of 
the remaining elements.
For example, {A, B, D} is a subsequence of sequence {A, B, C, D, E} that is obtained after removing {C} and {E}. 
People are often confused between a subarray and a subsequence. A subarray will always be contiguous but a subsequence need not be 
contiguous. That is, unlike subarrays, subsequences are not required to occupy consecutive positions within the original sequences. 
For example, {A, C, E} is a subsequence of {A, B, C, D, E}, but not a substring and {A, B, c} is both a subarray and a subsequence. 

For example , the subsequence of { 1 , 2 , 3 , 4 } are { 1 } , { 1 , 2 } , { 1 , 2 , 3 } , { 1 , 2 , 3 , 4 } , { 2 } , { 2 , 3 } ,
{ 2 , 3 , 4 } , { 3 } , { 3 , 4 } , { 4 } ,      { 1 , 3 } ,{ 1 , 3 , 4 } , { 1 , 2 , 4 } , { 1 , 4 } , { 2 , 4 }

Please note that a Subsequence can be in context of both arrays and string and there is not sebsequence empty.
Generating all subsequences of an array/string is equivalent to generating power set of the array/string. 
For a given set S, the power set equals 2^n - 1 


**************   Subset   **************
A subset is any possible combination of the original set. The term subset is often used for subsequence but this is wrong.
A subsequence always maintain the relative order of elements of the array (i.e. increasing index) but there is no such restriction on 
a subset. For example {3, 1} is a valid subset of {1, 2, 3, 4, 5} but it is neither a subsequence or a subarray. 
It is worth noting that all subarrays are subsequences and all subsequences are subset but the reverse is not true. 
For instance, the subarray {1, 2} of the array {1, 2, 3, 4, 5} is also a subsequence and a subset. 

For example, 
