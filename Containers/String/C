************************* Modifiers **************************
replace
Replaces the portion of the string that begins at character pos and spans len characters

  string base="this is a test string.";
  string str2="n example";
  string str3="sample phrase";
  string str4="useful.";

  replace signatures used in the same order as described above:

  Using positions:               
  string str=base;                 "this is a test string."
  str.replace(9,5,str2);           "this is an example string." 
  str.replace(19,6,str3,7,6);      "this is an example phrase." 
  str.replace(8,10,"just a");      "this is just a phrase."     
  str.replace(8,6,"a shorty",7);   "this is a short phrase."    
  str.replace(22,1,3,'!');         "this is a short phrase!!!"  

  Using iterators:                                              
  str.replace(str.begin(),str.end()-3,str3);                       "sample phrase!!!"      
  str.replace(str.begin(),str.begin()+6,"replace");                "replace phrase!!!"     
  str.replace(str.begin()+8,str.begin()+14,"is coolness",7);       "replace is cool!!!"    
  str.replace(str.begin()+12,str.end()-4,4,'o');                   "replace is cooool!!!"  
  str.replace(str.begin()+11,str.end(),str4.begin(),str4.end());   "replace is useful."    
  std::cout << str << '\n';
  
 Complexity : linear in the new string length

  erase
  Erases part of the string, reducing its length

  std::string str ("This is an example sentence.");
  std::cout << str << '\n';
                                            "This is an example sentence."
  str.erase (10,8);                                    ^^^^^^^^
  std::cout << str << '\n';
                                            "This is an sentence."
  str.erase (str.begin()+9);                          ^
  std::cout << str << '\n';
                                            "This is a sentence."
  str.erase (str.begin()+5, str.end()-9);         ^^^^^
  std::cout << str << '\n';
                                            "This sentence."
Complexity : linear in the new string length
