

Perfect Binary tree
1) every node has two children except leaves
2) all leaves are at the same level
            O            
         /     \
        O       O
      /   \   /   \
     O     O O     O



Balanced Binary Tree
1) the height of tree = O(log2(n))
2) | height(left subtree) - height(right subtree) | <= 1   //   {1,0,-1}

          3 - 2 = (1)--> Balance Factor
           3O2          
         /     \
       2O1     2O1
      /   \   /   \
     O     O O     O
    /         \
   O           O

A degenerate (or Pathological) tree
1) every parent node has only one child eigher left or right
2) such trees are performance-wise same as linked-list
         
         O
          \
           O
            \
             O
              \
               O
                \
                 O
////////////////////////////////////////////

         Max no. of nodes at level L = 2^L
         Max no. of nodes in binary tree = 2^(h+1) - 1 (where h is height of tree)   //  as perfect tree
         
            O           Max no. of nodes at level 0 = 1 = 2^0
         /     \
        O       O       Max no. of nodes at level 1 = 2 = 2^1
      /   \   /   \
     O     O O     O    Max no. of nodes at level 2 = 4 = 2^2
     
